<p>Submit team deliverables and individual deliverables separately. Any person on the team can submit your team
  deliverables.</p>
<p>If your deliverable contains more than one file, then create a zip file.</p>
<%
  courses = @deliverable.creator.registered_for_these_courses_during_current_semester.delete_if {|course| course.assignments.empty?}

  assignment_options = {}
  selected_assignment = nil
  assignments_js = ''
  courses.each do |course|
    assignments_js += "'#{course.id}':\""
    assignment_options[course.id] = []
    course.submittable_assignments.each do |assignment|
      #assignment_text = "Task #{assignment.task_number}: #{assignment.title} " + (assignment.team_deliverable ? "(Team deliverable)" : "")
      assignment_text = assignment.formatted_title + (assignment.team_deliverable ? " (Team deliverable)" : "")
      if assignment.team_deliverable
        @user_teams.select { |team| team.course_id == course.id }.each do |user_team|
          team_assignment_text = assignment_text + " (#{user_team.name})"
          assignment_options[course.id] << [team_assignment_text, "#{assignment.id},#{user_team.id}"]
          assignments_js += "<option value='#{assignment.id},#{user_team.id}'>#{team_assignment_text}</option>"
        end
      else
        assignment_options[course.id] << [assignment_text, assignment.id]
        assignments_js += "<option value='#{assignment.id}'>#{assignment_text}</option>"
      end
    end
    assignments_js += "\","
  end

  selected_course = nil
  if !params[:course_id].blank?
    selected_course = params[:course_id]
  elsif @deliverable.persisted? && courses.include?(@deliverable.assignment.course)
    selected_course = @deliverable.assignment.course.id
  end

  selected_assignment = nil
  if !params[:assignment_id].blank?
    selected_assignment = params[:assignment_id]
  elsif selected_course && @deliverable.persisted? && !selected_assignment
    selected_assignment = @deliverable.assignment.id
  end

  if selected_course && assignment_options[selected_course.to_i]
    selected_course_assignments = assignment_options[selected_course.to_i]
  else
    selected_course_assignments = []
  end
%>

<%= form_for @deliverable, :html => {:multipart => true} do |f| %>
    <%= render 'shared/error_messages', object: f.object %>

    <table class='layout_table'>
      <tbody>
        <tr>
          <td><%= f.label :course_id, "Select Course" %></td>
          <td><%= f.collection_select(:course_id, courses, :id, :name,
            {:include_blank => true, :selected => selected_course},
            {:name => "course_id"}) %>
          </td>
        </tr>
        <tr>
          <td><%= f.label :assignment_id, "Select Assignment" %></td>
          <td><%= f.select :assignment_id, selected_course_assignments, {:include_blank => true, :selected => selected_assignment} %></td>
        </tr>
      </tbody>
    </table>

    <div class="deliverable_attachment">
      <%= fields_for :deliverable_attachment do |attachment_form| -%>
        <p>
          <%= attachment_form.label :attachment, "Deliverable file to upload" %>
          <%= attachment_form.file_field :attachment %>
        </p>

        <p>
          <%= attachment_form.label :comment, "Comments" %>
          <br>
          <%= attachment_form.text_area :comment, :size => "90x10" %>
        </p>
      <% end -%>
    </div>

    <p>
      <%= f.submit button_name %>
    </p>
<% end %>

<script>
  $(function() {
    assignment_options = {<%= assignments_js.html_safe %>};

    function populate_assignments() {
      if ($('#deliverable_course_id').val()) {
        $('#deliverable_assignment_id').html(assignment_options[$('#deliverable_course_id').val()]);
      } else {
        $('#deliverable_assignment_id').html('');
      }
    }

    $('#deliverable_course_id').change(function() {
      populate_assignments();
    });
    populate_assignments();
  });
</script>