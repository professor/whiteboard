<% content_for :title, "New person" %>
<h1>New person</h1>

<% content_for :javascript do %>

    <%= javascript_tag do %>
        $(function() {
        $("#user_expires_at").datepicker({
        showButtonPanel: true,
        dateFormat: 'yy-mm-dd'
        });
        });
    <% end %>

    <script type="text/javascript">
        function remove_hyphens(string) {
            return string.replace(/-/g, "");
        }

        function capitalise(string) {
//    return string.charAt(0).toUpperCase() + string.substring(1).toLowerCase();
            return string.charAt(0).toUpperCase() + string.substring(1).replace(/ /g, "");
        }

        //Seok-Jeong Lee => seok.jeong.lee@sv.cmu.edu
        function prepare_for_google(string) {
//    return string.charAt(0).toUpperCase() + string.substring(1).toLowerCase();
            return string.toLowerCase().replace(/ /g, ".").replace(/-/g, ".");
        }

        function ends_with(str, suffix) {
            return str.indexOf(suffix, str.length - suffix.length) !== -1;
        }

        //TWiki - user names MJLee must be renamed to MjLee

        function update_twiki_and_email() {
            document.forms["new_user"].user_twiki_name.value = capitalise(remove_hyphens(document.forms["new_user"].user_first_name.value)) + capitalise(remove_hyphens(document.forms["new_user"].user_last_name.value));

            // document.forms["new_user"].user_email.value=lower_case(document.forms["new_user"].user_first_name.value)+"."+lower_case(document.forms["new_user"].user_last_name.value)+"@<%=@domain%>";
            document.forms["new_user"].user_email.value = prepare_for_google(document.forms["new_user"].user_first_name.value) + "." + prepare_for_google(document.forms["new_user"].user_last_name.value) + "@<%=@domain%>";
        }

        // Adds a div with an AJAX loader and the specified text under the specified node.
        function add_loader(node, text) {
            node.empty();
            node.append($('<div/>')
                .append($('<div/>').css('float', 'left').append($('<%= image_tag("/images/loader.gif") %>')))
                .append($('<div/>').css('float', 'left').text(text))
                .append($('<br/>')));
        }

        // Clears the specified node and adds an account error for the specified email if data communicates that the email already exists.
        function clear_or_display_account_error(node, email, data) {
            node.empty();

            // Display a warning if the account does exist
            if (data && data.exists) {
                node.append($('<div/>').css('color', 'red').text('The account "' + email + '" is already in use.'));
            }
        }

        // Checks whether the specified email address is already in use.
        function check_email() {
            var email = document.forms["new_user"].user_email.value;
            var node = $('#email_warning');
            $.getJSON('<%=people_path%>/check_email.json?q=' + email, function(data) {
                clear_or_display_account_error(node, email, data);
            });
            add_loader(node, 'Checking email...');
        }

        // Checks whether the specified webiso accoutn is already in use
        function check_webiso_account(email) {
            var node = $('#webiso_account_warning');
            $.getJSON('<%=people_path%>/check_webiso_account.json?q=' + email, function(data) {
                clear_or_display_account_error(node, email, data);
            });
            add_loader(node, 'Checking account...');
        }

        function add_at_andrew_dot_cmu_dot_edu() {
            andrew_email = document.forms["new_user"].user_webiso_account.value
            if (andrew_email != "" && !ends_with(andrew_email, "@andrew.cmu.edu")) {
                andrew_email += "@andrew.cmu.edu";
                document.forms["new_user"].user_webiso_account.value = andrew_email;
            }

            check_webiso_account(andrew_email);
        }

        function update_student() {
            now = new Date;
            offset = 1;
            if (document.forms["new_user"].user_is_part_time.checked == true) {
                offset = 2
            }
            if (document.forms["new_user"].user_is_student.checked == true) {
                document.forms["new_user"].user_graduation_year.value = (now.getFullYear() + offset);
            }
            else {
                document.forms["new_user"].user_graduation_year.value = "";
            }

        }


    </script>

<% end %>

<%= form_for(@person) do |f| %>
    <% if @person.errors.any? %>
        <div id="error_explanation">
          <h2><%= pluralize(@person.errors.count, "error") %> prohibited this person from being saved:</h2>

          <ul>
            <% @person.errors.full_messages.each do |msg| %>
                <li><%= msg %></li>
            <% end %>
          </ul>
        </div>
    <% end %>

    <p>
      <%= f.label :first_name, "Preferred first name" %><br/>
      <%= f.text_field :first_name, :onblur => "update_twiki_and_email()" %>
    </p>
    <p>
      <%= f.label :legal_first_name %><br/>
      <%= f.text_field :legal_first_name %><br/>
      <span class="help_text">(Ok to leave blank)</span>
    </p>
    <p>
      <%= f.label :last_name %><br/>
      <%= f.text_field :last_name, :onblur => "update_twiki_and_email()" %>
    </p>

    <!--
    <% if Rails.env.development? %>
  <p>
  <%# f.label :password, f.object.new_record? ? nil : "Change password" %><br />
  <%# f.password_field :password %><br />
    <span class="help_text">(This field only appears in development for local login testing without a network)</span>
  </p>
  <% end %>
    -->

    <p>
      <%= f.label :twiki_name %><br/>
      <%= f.text_field :twiki_name %>
      <%= check_box_tag("create_twiki_account", 1, true) %> Create twiki account?
    </p>
    <p>
      <%= f.label :email %><br/>
      <%= f.text_field :email, :onblur => "check_email()" %>
      <%= check_box_tag("create_google_email", 1, true) %> Create google email account?
      <div id="email_warning"></div>
    </p>
    <p>
      <%= f.label :webiso_account, "Andrew account" %><br/>
      <%= f.text_field :webiso_account, :onblur => "add_at_andrew_dot_cmu_dot_edu()", :placeholder => "@andrew.cmu.edu" %>
      <div id="webiso_account_warning"></div>
    </p>
    <p>
      <%= f.label :personal_email %><br/>
      <%= f.text_field :personal_email %><br/>
      <span class="help_text">(Necessary for google email account creation)</span>
    </p>
    <h2>System Roles</h2>
    <p>
      <%= f.label :is_staff, "Is staff or faculty?" %><br/>
      <%= f.check_box :is_staff %>
    </p>
    <p>
      <%= f.label :is_student, "Is a student?" %><br/>
      <%= f.check_box :is_student, :onchange => "update_student()" %>
    </p>
    <p>
      <%= f.label :is_active, "Is active? - a current user?" %><br/>
      <%= f.check_box :is_active %>
    </p>
    <h2>Just for students</h2>
    <p>
      <%= f.label :is_part_time, "Is part time student?" %>
      <%= f.check_box :is_part_time, :onchange => "update_student()" %>
    </p>
    <p>
      <%= f.label :graduation_year %><br/>
      <%= f.text_field :graduation_year %>
    </p>
    <p>
      Graduate program<br/>
      <%= f.text_field :masters_program %><br/>
      <span class="help_text">SE SM INI PhD</span>
    </p>
    <p>
      Graduate track <br/>
      <%= f.text_field :masters_track %><br/>
      <span class="help_text">Tech DM IS MOB SM</span>
    </p>
    <h2>Account Termination</h2>
    <p>
      <%= f.label "Expires at" %>
      <%= f.text_field :expires_at, :size => 10 %><br/>
      <% help_text = AcademicCalendar.next_semester + " semester starts on " + AcademicCalendar.date_for_semester_start(AcademicCalendar.next_semester, AcademicCalendar.next_semester_year).to_s %>
      <span class="help_text">(<%= help_text %>)</span>
    </p>


    <%= f.submit "Create" %>
    </p>
<% end %>

<%= link_to 'Back', people_path %>
