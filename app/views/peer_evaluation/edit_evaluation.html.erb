<% content_for :title, 'Peer evaluation for ' + @team.name %>
<% content_for :javascript do %>
    <script type="text/javascript">
        $(document).ready(function () {
            // If a reviewer has updated the form on evaluation page, "isUpdated" will be set to true.
            // Every time after an ajax save operation has been made, "isUpdated" will be set to false.
            var isUpdated = false;

            var showErrors = function (m) {
                // A simple way to show error message is showing an alert message.
                // alert(m.toString());
                var errorElement = '' +
                        '<div class="ui-widget" data-error="ajaxError">' +
                        '<div class="ui-state-error ui-corner-all" style="padding: 0 .7em;">' +
                        '<p style="color: red; margin-top: 5px;">' +
                        '<span class="ui-icon ui-icon-alert" style="float: left; margin-right: .3em;"></span>' +
                        m.toString() +
                        '</p>' +
                        '</div>' +
                        '</div>'

                // clear error messages before setting a new one
                $('div[data-error="ajaxError"]').remove();
                $(errorElement).prependTo('#mainContent .content');
            };

            // The timer of checking if evaluation page is "dirty". Timer function will be triggered every
            // 10 seconds. If evaluation page has been updated since previous ajax save, the new evaluation
            // data will be saved again.
            setInterval(function () {
                if (isUpdated) {
                    $.ajax({
                        type:'post',
                        dataType:'json',
                        data:$('#new_peer_evaluation_review').serialize(),
                        timeout: 8000,
                        url:"/peer_evaluation/complete_evaluation",
                        success:function (data) {
                            if (data.code == "failed") {
                                showErrors(data.message);
                            }
                        },
                        error:function (x, t, m) {
                            // ignore timeout error
                            if ("timeout" != t) {
                                showErrors(m);
                            }
                        },
                        complete:function (data) {
                            isUpdated = false;
                        }
                    });
                }
            }, 10000);

            // note: "change" event doesn't work here. To fire "change" event, user has to focus out the control
            $("#new_peer_evaluation_review textarea").live("keydown",function () {
                isUpdated = true;
            });
        });

    </script>

<% end %>
<script type="text/javascript">
    var confirmation_needed = true;
    window.onbeforeunload = confirmExit;
</script>

<h1>Peer evaluation form completed by <%= @author.human_name %></h1>


<p>The goal of the Peer Evaluation Process is give you a chance to receive constructive feedback from your peers. As
  your team strives to become a high-performance team, it is important to communicate what is working well and what
  needs a little more improvement.</p>
<p>From the results of this form, faculty gain additional insight into how individual students contributed to the
  performance of the team. The results may affect your individual grade.</p>
<p>We don’t want rubber stamped answers. Carefully consider your teammates’ performance. Good answers are actionable and
  specific to the student. Please provide thoughtful, constructive feedback.</p>
<p>Instead of saying "Did not show any leadership skills" be clear about what the person can do. Here are some examples,
  "Encourage the team to have a high standard" or "Prepare meeting agendas to solve specific problems"</p>
<p>Do not use this as an opportunity to vent about frustrations that you should have brought up in person.</p>


<%= form_for @review, :url => {:action => "complete_evaluation"} do |f| %>

    <% usercounter = 0 %>
    <% questioncounter = 0 %>

    <input type="hidden" name="id" value="<%= params[:id] %>">
    <input type="hidden" name="user_id" value="<%= params[:user_id] %>">

    <% @users.each do |user| %>

        <h2>Feedback for <%= user.human_name %> </h2>
        <% @questions.each do |question| %>
            <p><%= question %></p>
            <% if questioncounter == @questions.size - 1 %>
                <% learning_objective = PeerEvaluationLearningObjective.where({:user_id => user.id}).first %>
                <% if learning_objective.nil? || learning_objective.learning_objective.nil? %>
                    <p>Please skip this question as no learning objective was provided.</p>
                <% else %>
                    <p>"<%= learning_objective.learning_objective %>"</p>
                <% end %>
            <% end %>
            <% if @on_team %>
                <%= f.text_area :answer, :index => (@questions.size*usercounter) + questioncounter, :value => @answers[(@questions.size*usercounter) + questioncounter], :size => "95x20" %><br />
                <br/>
            <% else %>
                <%= f.text_area :answer, :disabled => true, :index => (@questions.size*usercounter) + questioncounter, :value => @answers[(@questions.size*usercounter) + questioncounter], :size => "95x20" %><br />
                <br/>
            <% end %>
            <% questioncounter += 1 %>
        <% end %>

        <% usercounter += 1 %>
        <% questioncounter = 0 %>
    <% end %>

    <h2>Contribution Allocation</h2>
    <p>In the table below, allocate 100 points among you and your group members that reflects each individual's
      effective contribution to all group work, including yourself.</p>
    <p>Note that we are not interested in the amount of material produced. We are interested in quality contributions to
      the team. If a team member provided significant amount of material that needed to be reworked, then feel free to
      score accordingly.</p>
    <p>Taking or adding a few points to anyone's score will not substantially affect their grade. Therefore, if a member
      did not contribute, you must clearly denote it by deducting an amount of points commensurate with the lack of
      participation.</p>
    <br/>
    <p>There are <%= @users.size %> members on this team. On average, each team member will
      receive <%= 100 / @users.size unless @users.size == 0 %> points. Please use whole numbers.</p>
    <% membercounter = 0 %>
    <% @users.each do |member| %>
        <p><%= member.human_name %></p>
        <% if @on_team %>
            <input type="text" name="allocations[<%= membercounter %>]" value="<%= @point_allocations[member.human_name] %>"><br/>
        <% else %>
            <input type="text" disabled name="allocations[<%= membercounter %>]" value="<%= @point_allocations[member.human_name] %>"><br/>
        <% end %>
        <% membercounter += 1 %>
    <% end %>

    <% if @on_team %>
        <%= f.submit 'Save', :onclick => "confirmation_needed = false;" %>
    <% else %>
        <%= f.submit 'Save', :disabled => true, :onclick => "confirmation_needed = false;" %>
    <% end %>
<% end %>
